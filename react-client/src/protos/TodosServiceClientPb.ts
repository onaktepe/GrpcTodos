/**
 * @fileoverview gRPC-Web generated client stub for grpc.todos
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v4.24.2
// source: protos/todos.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as protos_todos_pb from '../protos/todos_pb';


export class TodosClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorAddTodo = new grpcWeb.MethodDescriptor(
    '/grpc.todos.Todos/AddTodo',
    grpcWeb.MethodType.UNARY,
    protos_todos_pb.AddTodoRequest,
    protos_todos_pb.EmptyModel,
    (request: protos_todos_pb.AddTodoRequest) => {
      return request.serializeBinary();
    },
    protos_todos_pb.EmptyModel.deserializeBinary
  );

  addTodo(
    request: protos_todos_pb.AddTodoRequest,
    metadata: grpcWeb.Metadata | null): Promise<protos_todos_pb.EmptyModel>;

  addTodo(
    request: protos_todos_pb.AddTodoRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: protos_todos_pb.EmptyModel) => void): grpcWeb.ClientReadableStream<protos_todos_pb.EmptyModel>;

  addTodo(
    request: protos_todos_pb.AddTodoRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: protos_todos_pb.EmptyModel) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/grpc.todos.Todos/AddTodo',
        request,
        metadata || {},
        this.methodDescriptorAddTodo,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/grpc.todos.Todos/AddTodo',
    request,
    metadata || {},
    this.methodDescriptorAddTodo);
  }

  methodDescriptorUpdateTodo = new grpcWeb.MethodDescriptor(
    '/grpc.todos.Todos/UpdateTodo',
    grpcWeb.MethodType.UNARY,
    protos_todos_pb.UpdateTodoRequest,
    protos_todos_pb.EmptyModel,
    (request: protos_todos_pb.UpdateTodoRequest) => {
      return request.serializeBinary();
    },
    protos_todos_pb.EmptyModel.deserializeBinary
  );

  updateTodo(
    request: protos_todos_pb.UpdateTodoRequest,
    metadata: grpcWeb.Metadata | null): Promise<protos_todos_pb.EmptyModel>;

  updateTodo(
    request: protos_todos_pb.UpdateTodoRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: protos_todos_pb.EmptyModel) => void): grpcWeb.ClientReadableStream<protos_todos_pb.EmptyModel>;

  updateTodo(
    request: protos_todos_pb.UpdateTodoRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: protos_todos_pb.EmptyModel) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/grpc.todos.Todos/UpdateTodo',
        request,
        metadata || {},
        this.methodDescriptorUpdateTodo,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/grpc.todos.Todos/UpdateTodo',
    request,
    metadata || {},
    this.methodDescriptorUpdateTodo);
  }

  methodDescriptorDeleteTodo = new grpcWeb.MethodDescriptor(
    '/grpc.todos.Todos/DeleteTodo',
    grpcWeb.MethodType.UNARY,
    protos_todos_pb.IdModel,
    protos_todos_pb.EmptyModel,
    (request: protos_todos_pb.IdModel) => {
      return request.serializeBinary();
    },
    protos_todos_pb.EmptyModel.deserializeBinary
  );

  deleteTodo(
    request: protos_todos_pb.IdModel,
    metadata: grpcWeb.Metadata | null): Promise<protos_todos_pb.EmptyModel>;

  deleteTodo(
    request: protos_todos_pb.IdModel,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: protos_todos_pb.EmptyModel) => void): grpcWeb.ClientReadableStream<protos_todos_pb.EmptyModel>;

  deleteTodo(
    request: protos_todos_pb.IdModel,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: protos_todos_pb.EmptyModel) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/grpc.todos.Todos/DeleteTodo',
        request,
        metadata || {},
        this.methodDescriptorDeleteTodo,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/grpc.todos.Todos/DeleteTodo',
    request,
    metadata || {},
    this.methodDescriptorDeleteTodo);
  }

  methodDescriptorGetTodos = new grpcWeb.MethodDescriptor(
    '/grpc.todos.Todos/GetTodos',
    grpcWeb.MethodType.UNARY,
    protos_todos_pb.EmptyModel,
    protos_todos_pb.TodosResponse,
    (request: protos_todos_pb.EmptyModel) => {
      return request.serializeBinary();
    },
    protos_todos_pb.TodosResponse.deserializeBinary
  );

  getTodos(
    request: protos_todos_pb.EmptyModel,
    metadata: grpcWeb.Metadata | null): Promise<protos_todos_pb.TodosResponse>;

  getTodos(
    request: protos_todos_pb.EmptyModel,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: protos_todos_pb.TodosResponse) => void): grpcWeb.ClientReadableStream<protos_todos_pb.TodosResponse>;

  getTodos(
    request: protos_todos_pb.EmptyModel,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: protos_todos_pb.TodosResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/grpc.todos.Todos/GetTodos',
        request,
        metadata || {},
        this.methodDescriptorGetTodos,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/grpc.todos.Todos/GetTodos',
    request,
    metadata || {},
    this.methodDescriptorGetTodos);
  }

  methodDescriptorGetTodo = new grpcWeb.MethodDescriptor(
    '/grpc.todos.Todos/GetTodo',
    grpcWeb.MethodType.UNARY,
    protos_todos_pb.IdModel,
    protos_todos_pb.TodoDetailResponse,
    (request: protos_todos_pb.IdModel) => {
      return request.serializeBinary();
    },
    protos_todos_pb.TodoDetailResponse.deserializeBinary
  );

  getTodo(
    request: protos_todos_pb.IdModel,
    metadata: grpcWeb.Metadata | null): Promise<protos_todos_pb.TodoDetailResponse>;

  getTodo(
    request: protos_todos_pb.IdModel,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: protos_todos_pb.TodoDetailResponse) => void): grpcWeb.ClientReadableStream<protos_todos_pb.TodoDetailResponse>;

  getTodo(
    request: protos_todos_pb.IdModel,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: protos_todos_pb.TodoDetailResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/grpc.todos.Todos/GetTodo',
        request,
        metadata || {},
        this.methodDescriptorGetTodo,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/grpc.todos.Todos/GetTodo',
    request,
    metadata || {},
    this.methodDescriptorGetTodo);
  }

}

